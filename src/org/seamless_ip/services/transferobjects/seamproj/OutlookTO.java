/* gromit: OutlookTO .java
 * ==============================================================================
 * (This code was generated by a tool)
 * ==============================================================================
 * This work has been carried out as part of the SEAMLESS Integrated Framework
 * project, EU 6th Framework Programme, contract no. 010036-2 and/or as part
 * of the SEAMLESS association.
 *
 * Copyright (c) 2009 The SEAMLESS Association.
 *
 * For more information: http://www.seamlessassociation.org;
 * email: info@seamless-if.org
 *
 * The contents of this file is subject to the SEAMLESS Association License for
 * software infrastructure and model components Version 1.1 (the "License");
 * you may not use this file except in compliance with the License. You may
 * obtain a copy of the License at http://www.seamlessassociation.org/License.htm
 *
 * Software distributed under the License is distributed on an "AS IS"  basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License for
 * the specific governing rights and limitations.
 *
 * The Initial Developers of the Original Code are:
 * - Ioannis Athanasiadis; IDSIA Dalle Molle Institute for Artificial Intelligence
 * - Benny Johnsson; Lund University
 * - Rob Knapen; Alterra, Wageningen UR
 * - Hongtao Li; IDSIA Dalle Molle Institute for Artificial Intelligence
 * - Michiel Rop; Alterra, Wageningen UR / ilionX
 * - Lorenzo Ruinelli; IDSIA Dalle Molle Institute for Artificial Intelligence
 * ================================================================================
 * Contributor(s): N/A
 * ================================================================================
 */
package org.seamless_ip.services.transferobjects.seamproj;

import java.io.Serializable;
import java.lang.Long;
import java.util.HashSet;
import org.seamless_ip.ontologies.capri.BiofuelDemand;
import org.seamless_ip.ontologies.capri.DemandShift;
import org.seamless_ip.ontologies.capri.EnergyPrice;
import org.seamless_ip.ontologies.capri.ExchangeRates;
import org.seamless_ip.ontologies.capri.InflationRate;
import org.seamless_ip.ontologies.capri.Modulation;
import org.seamless_ip.ontologies.capri.SupplyShift;
import org.seamless_ip.ontologies.capri.YieldGrowth;
import org.seamless_ip.ontologies.seamproj.Outlook;
import org.seamless_ip.services.transferobjects.capri.BiofuelDemandListTO;
import org.seamless_ip.services.transferobjects.capri.DemandShiftListTO;
import org.seamless_ip.services.transferobjects.capri.EnergyPriceListTO;
import org.seamless_ip.services.transferobjects.capri.ExchangeRatesListTO;
import org.seamless_ip.services.transferobjects.capri.InflationRateListTO;
import org.seamless_ip.services.transferobjects.capri.ModulationListTO;
import org.seamless_ip.services.transferobjects.capri.SupplyShiftListTO;
import org.seamless_ip.services.transferobjects.capri.YieldGrowthListTO;
import org.seamless_ip.services.transferobjects.utils.AbstractTO;
import org.seamless_ip.services.transferobjects.utils.TO;
import org.seamless_ip.services.transferobjects.utils.CodegeneratorSettings;

@CodegeneratorSettings(sourcename="org.seamless_ip.ontologies.seamproj.Outlook", readonly=false, used=true)
@SuppressWarnings("serial")
public class OutlookTO extends AbstractTO implements TO<OutlookTO, Outlook>, Serializable, Cloneable 	
{
	private YieldGrowthListTO _yieldgrowth;		
	private ModulationListTO _modulations;		
	private Long _id;		
	private InflationRateListTO _inflationrates;		
	private ExchangeRatesListTO _exchangerates;		
	private EnergyPriceListTO _energyprice;		
	private DemandShiftListTO _demandshifts;
	private SupplyShiftListTO _supplyshifts;
	private BiofuelDemandListTO _biofueldemands;		



	public OutlookTO()
	{
		super();
		_yieldgrowth = new YieldGrowthListTO();
		_modulations = new ModulationListTO();
		_inflationrates = new InflationRateListTO();
		_exchangerates = new ExchangeRatesListTO();
		_energyprice = new EnergyPriceListTO();
		_demandshifts = new DemandShiftListTO();
		_supplyshifts = new SupplyShiftListTO();
		_biofueldemands = new BiofuelDemandListTO();
	}

	public static Outlook createDBInstance()
	{
		Outlook dbItem = new Outlook();
		dbItem.setBiofuelDemands(new HashSet<BiofuelDemand>());
		dbItem.setDemandShifts(new HashSet<DemandShift>());
		dbItem.setEnergyPrice(new HashSet<EnergyPrice>());
		dbItem.setExchangeRates(new HashSet<ExchangeRates>());
		dbItem.setInflationRates(new HashSet<InflationRate>());
		dbItem.setModulations(new HashSet<Modulation>());
		dbItem.setYieldGrowth(new HashSet<YieldGrowth>());
		dbItem.setSupplyShifts(new HashSet<SupplyShift>());
		return dbItem;
	}


	public static Outlook createDBInstance(OutlookTO toItem)
	{
		if (toItem != null)
			return toItem.assignTo(createDBInstance());
		else
			return createDBInstance();
	}
	
    public static void releaseDBInstance(Outlook dbItem)
    {
        if (dbItem != null) {
            dbItem.setBiofuelDemands(null);
            dbItem.setDemandShifts(null);
            dbItem.setSupplyShifts(null);
            dbItem.setEnergyPrice(null);
            dbItem.setExchangeRates(null);
            dbItem.setInflationRates(null);
            dbItem.setModulations(null);
            dbItem.setYieldGrowth(null);
        }
    }

    public OutlookTO assignFrom(Outlook target)	
	{
		if (target != null)
		{
			try {
				_biofueldemands .assignFrom(target.getBiofuelDemands());
			} catch(Exception e)
			{
				//to catch hibernate exception throwed when null value is getted
			}		
			try {
				_demandshifts .assignFrom(target.getDemandShifts());
			} catch(Exception e)
			{
				//to catch hibernate exception throwed when null value is getted
			}		
			try {
				_supplyshifts .assignFrom(target.getSupplyShifts());
			} catch(Exception e)
			{
				//to catch hibernate exception throwed when null value is getted
			}		
			try {
				_energyprice .assignFrom(target.getEnergyPrice());
			} catch(Exception e)
			{
				//to catch hibernate exception throwed when null value is getted
			}		
			try {
				_exchangerates .assignFrom(target.getExchangeRates());
			} catch(Exception e)
			{
				//to catch hibernate exception throwed when null value is getted
			}		
			try {
					_id = target.getId();
			} catch(Exception e)
			{
				//to catch hibernate exception throwed when null value is getted
			}			
			try {
				_inflationrates .assignFrom(target.getInflationRates());
			} catch(Exception e)
			{
				//to catch hibernate exception throwed when null value is getted
			}		
			try {
				_modulations .assignFrom(target.getModulations());
			} catch(Exception e)
			{
				//to catch hibernate exception throwed when null value is getted
			}		
			try {
				_yieldgrowth .assignFrom(target.getYieldGrowth());
			} catch(Exception e)
			{
				//to catch hibernate exception throwed when null value is getted
			}		
		}
		return this;
	}
    
    public Outlook assignTo(Outlook target)
    {
        if (target != null) 
        {
			target.setBiofuelDemands(_biofueldemands .assignTo(target.getBiofuelDemands()));
			target.setDemandShifts(_demandshifts .assignTo(target.getDemandShifts()));
			target.setSupplyShifts(_supplyshifts .assignTo(target.getSupplyShifts()));
			target.setEnergyPrice(_energyprice .assignTo(target.getEnergyPrice()));
			target.setExchangeRates(_exchangerates .assignTo(target.getExchangeRates()));
			target.setInflationRates(_inflationrates .assignTo(target.getInflationRates()));
			target.setModulations(_modulations .assignTo(target.getModulations()));
			target.setYieldGrowth(_yieldgrowth .assignTo(target.getYieldGrowth()));
			target.setId(_id);			
        }
        return target;
    }	
    
    public boolean equalsTo(Outlook target)
    {
        if (target == null)
            return false;

        OutlookTO targetTO = new OutlookTO().assignFrom(target);
        return targetTO.equals(this);
    }
    
    @Override
    public OutlookTO clone()
    {
    	OutlookTO clone = new OutlookTO();
		clone.setBiofuelDemands(_biofueldemands);
		clone.setDemandShifts(_demandshifts);
		clone.setSupplyShifts(_supplyshifts);
		clone.setEnergyPrice(_energyprice);
		clone.setExchangeRates(_exchangerates);
		clone.setId(_id);
		clone.setInflationRates(_inflationrates);
		clone.setModulations(_modulations);
		clone.setYieldGrowth(_yieldgrowth);
        return clone;
    }    
    
    @Override
    public int hashCode()
    {
        int result = 0;
		result = 31 * result + (_yieldgrowth != null ? _yieldgrowth .hashCode() : 0);
		result = 31 * result + (_modulations != null ? _modulations .hashCode() : 0);
		result = 31 * result + (_id != null ? _id .hashCode() : 0);
		result = 31 * result + (_inflationrates != null ? _inflationrates .hashCode() : 0);
		result = 31 * result + (_exchangerates != null ? _exchangerates .hashCode() : 0);
		result = 31 * result + (_energyprice != null ? _energyprice .hashCode() : 0);
		result = 31 * result + (_demandshifts != null ? _demandshifts .hashCode() : 0);
		result = 31 * result + (_supplyshifts != null ? _supplyshifts .hashCode() : 0);
		result = 31 * result + (_biofueldemands != null ? _biofueldemands .hashCode() : 0);
        return result;
    }    
    
    @Override
    public boolean equals(Object o)
    {
        if (this == o) return true;
        if (!(o instanceof OutlookTO)) return false;

        OutlookTO classTO = (OutlookTO) o;

		if (_yieldgrowth != null ? !_yieldgrowth .equals(classTO._yieldgrowth) : classTO._yieldgrowth != null)
			return false;
		if (_modulations != null ? !_modulations .equals(classTO._modulations) : classTO._modulations != null)
			return false;
		if (_id != null ? !_id .equals(classTO._id) : classTO._id != null)
			return false;
		if (_inflationrates != null ? !_inflationrates .equals(classTO._inflationrates) : classTO._inflationrates != null)
			return false;
		if (_exchangerates != null ? !_exchangerates .equals(classTO._exchangerates) : classTO._exchangerates != null)
			return false;
		if (_energyprice != null ? !_energyprice .equals(classTO._energyprice) : classTO._energyprice != null)
			return false;
		if (_demandshifts != null ? !_demandshifts .equals(classTO._demandshifts) : classTO._demandshifts != null)
			return false;
		if (_supplyshifts != null ? !_supplyshifts .equals(classTO._supplyshifts) : classTO._supplyshifts != null)
			return false;
		if (_biofueldemands != null ? !_biofueldemands .equals(classTO._biofueldemands) : classTO._biofueldemands != null)
			return false;
        
        return true;
    }
    
    public BiofuelDemandListTO getBiofuelDemands()
    {
		return _biofueldemands;
    }
    public DemandShiftListTO getDemandShifts()
    {
		return _demandshifts;
    }
    public SupplyShiftListTO getSupplyShifts()
    {
		return _supplyshifts;
    }
    public EnergyPriceListTO getEnergyPrice()
    {
		return _energyprice;
    }
    public ExchangeRatesListTO getExchangeRates()
    {
		return _exchangerates;
    }
    public Long getId()
    {
		return _id;
    }
    public InflationRateListTO getInflationRates()
    {
		return _inflationrates;
    }
    public ModulationListTO getModulations()
    {
		return _modulations;
    }
    public YieldGrowthListTO getYieldGrowth()
    {
		return _yieldgrowth;
    }
    public void setBiofuelDemands(BiofuelDemandListTO value)
    {
		_biofueldemands = value;
    }
    public void setDemandShifts(DemandShiftListTO value)
    {
		_demandshifts = value;
    }
    public void setSupplyShifts(SupplyShiftListTO value)
    {
		_supplyshifts = value;
    }
    public void setEnergyPrice(EnergyPriceListTO value)
    {
		_energyprice = value;
    }
    public void setExchangeRates(ExchangeRatesListTO value)
    {
		_exchangerates = value;
    }
    public void setId(Long value)
    {
		_id = value;
    }
    public void setInflationRates(InflationRateListTO value)
    {
		_inflationrates = value;
    }
    public void setModulations(ModulationListTO value)
    {
		_modulations = value;
    }
    public void setYieldGrowth(YieldGrowthListTO value)
    {
		_yieldgrowth = value;
    }
}